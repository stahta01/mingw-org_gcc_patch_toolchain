diff --git a/gcc/ada/adafcntl.h b/gcc/ada/adafcntl.h
new file mode 100644
--- /dev/null
+++ b/gcc/ada/adafcntl.h
@@ -0,0 +1,57 @@
+/****************************************************************************
+ *                                                                          *
+ *                         GNAT COMPILER COMPONENTS                         *
+ *                                                                          *
+ *                             A D A F C N T L                              *
+ *                                                                          *
+ *                              C Header File                               *
+ *                                                                          *
+ *          Copyright (C) 2002-2018, Free Software Foundation, Inc.         *
+ *                                                                          *
+ * GNAT is free software;  you can  redistribute it  and/or modify it under *
+ * terms of the  GNU General Public License as published  by the Free Soft- *
+ * ware  Foundation;  either version 3,  or (at your option) any later ver- *
+ * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *
+ * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *
+ * or FITNESS FOR A PARTICULAR PURPOSE.                                     *
+ *                                                                          *
+ * As a special exception under Section 7 of GPL version 3, you are granted *
+ * additional permissions described in the GCC Runtime Library Exception,   *
+ * version 3.1, as published by the Free Software Foundation.               *
+ *                                                                          *
+ * You should have received a copy of the GNU General Public License and    *
+ * a copy of the GCC Runtime Library Exception along with this program;     *
+ * see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    *
+ * <http://www.gnu.org/licenses/>.                                          *
+ *                                                                          *
+ * GNAT was originally developed  by the GNAT team at  New York University. *
+ * Extensive contributions were provided by Ada Core Technologies Inc.      *
+ *                                                                          *
+ ****************************************************************************/
+
+/*  This file provides a wrapper around the system <fcntl.h> header,
+ *  for use in situations where MINGW32 builds may require fall-back
+ *  support for some Unicode specific constants, when compiling for
+ *  use on legacy (pre-Vista) MS-Windows-32.  */
+
+#ifndef __ADAFCNTL_H_
+#define __ADAFCNTL_H_
+
+#include <fcntl.h>
+
+#ifdef __MINGW32__
+
+#ifndef _O_U8TEXT
+#define _O_U8TEXT   _O_TEXT
+#endif
+
+#ifndef _O_U16TEXT
+#define _O_U16TEXT  _O_TEXT
+#endif
+
+#ifndef _O_WTEXT
+#define _O_WTEXT    _O_TEXT
+#endif
+
+#endif	/* __MINGW32__ */
+#endif	/* !__ADAFCNTL_H_ */
diff --git a/gcc/ada/adaint.c b/gcc/ada/adaint.c
--- a/gcc/ada/adaint.c
+++ b/gcc/ada/adaint.c
@@ -42,10 +42,18 @@
 #ifndef _LARGEFILE_SOURCE
 #define _LARGEFILE_SOURCE
 #endif
 #define _FILE_OFFSET_BITS 64
 
+#if defined (__MINGW32__) || defined (__CYGWIN__)
+/* We MUST do this up-front, because definition of the UNICODE feature
+ * test macros is (erroneously) delegated to this private header, and
+ * these MUST be defined BEFORE any system header may be included.
+ */
+#include "mingw32.h"
+#endif
+
 #ifdef __vxworks
 
 /* No need to redefine exit here.  */
 #undef exit
 
@@ -123,12 +131,10 @@ extern "C" {
 #define ISALPHA isalpha
 #endif
 
 #elif defined (__MINGW32__) || defined (__CYGWIN__)
 
-#include "mingw32.h"
-
 /* Current code page and CCS encoding to use, set in initialize.c.  */
 UINT __gnat_current_codepage;
 UINT __gnat_current_ccs_encoding;
 
 #include <sys/utime.h>
diff --git a/gcc/ada/mingw32.h b/gcc/ada/mingw32.h
--- a/gcc/ada/mingw32.h
+++ b/gcc/ada/mingw32.h
@@ -34,12 +34,10 @@
     set. This files contains also the circuitry for the unicode support.   */
 
 #ifndef _MINGW32_H
 #define _MINGW32_H
 
-#include <_mingw.h>
-
 #ifndef RTX
 #define GNAT_UNICODE_SUPPORT
 #define _UNICODE /* For C runtime */
 #define UNICODE  /* For Win32 API */
 #endif
@@ -57,10 +55,12 @@
    That fails to compile, if malloc is poisoned, i.e. if !IN_RTS.  */
 #define _X86INTRIN_H_INCLUDED
 #endif
 #include <windows.h>
 
+_BEGIN_C_DECLS
+
 /* After including this file it is possible to use the character t as prefix
    to routines. If GNAT_UNICODE_SUPPORT is defined then the unicode enabled
    versions will be used.  */
 
 /* Copy to/from wide-string, if GNAT_UNICODE_SUPPORT activated this will do
@@ -119,6 +119,8 @@ extern UINT __gnat_current_ccs_encoding;
 
 #ifndef MAXPATHLEN
 #define MAXPATHLEN MAX_PATH
 #endif
 
+_END_C_DECLS
+
 #endif /* _MINGW32_H */
diff --git a/gcc/ada/rtinit.c b/gcc/ada/rtinit.c
--- a/gcc/ada/rtinit.c
+++ b/gcc/ada/rtinit.c
@@ -38,10 +38,18 @@
    that the __vxworks header appear before any other include.  */
 #ifdef __vxworks
 #include "vxWorks.h"
 #endif
 
+/* Likewise this, to ensure that the UNICODE feature test macros, which
+ * are defined in "mingw32.h", (contrary to established convention), get
+ * defined before any other header is included.
+ */
+#if defined (__MINGW32__)
+#include "mingw32.h"
+#endif
+
 #ifdef IN_RTS
 #include "tconfig.h"
 #include "tsystem.h"
 /* We don't have libiberty, so use malloc.  */
 #define xmalloc(S) malloc (S)
@@ -50,11 +58,11 @@
 #include "config.h"
 #include "system.h"
 #endif
 
 #include "raise.h"
-#include <fcntl.h>
+#include "adafcntl.h"
 
 #ifdef __cplusplus
 extern "C" {
 #endif
 
@@ -70,11 +78,10 @@ int __gnat_wide_text_translation_require
 int __gnat_rt_init_count = 0;
 /* number of references to the GNAT runtime, this is used to initialize
    and finalize properly the run-time. */
 
 #if defined (__MINGW32__)
-#include "mingw32.h"
 #include <windows.h>
 
 extern void __gnat_init_float (void);
 
 extern int gnat_argc;
diff --git a/gcc/ada/sysdep.c b/gcc/ada/sysdep.c
--- a/gcc/ada/sysdep.c
+++ b/gcc/ada/sysdep.c
@@ -54,11 +54,11 @@
 
 #ifdef IN_RTS
 #define POSIX
 #include "tconfig.h"
 #include "tsystem.h"
-#include <fcntl.h>
+#include "adafcntl.h"
 #include <sys/stat.h>
 #else
 #include "config.h"
 #include "system.h"
 #endif
